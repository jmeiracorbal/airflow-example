services:

  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5

  # service to init the database and create the admin user
  airflow-init:
    build: ./docker
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      AIRFLOW__CORE__FERNET_KEY: gst3hSzP5LP5enFSG/dZtHVWaRn+OI3SNuo9O17AaYE=
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
      # Custom variables to create the admin user
      AIRFLOW__ADMIN__USER: ${AIRFLOW__ADMIN__USER:-admin}
      AIRFLOW__ADMIN__PASSWORD: ${AIRFLOW__ADMIN__PASSWORD:-admin}
      AIRFLOW__ADMIN__EMAIL: ${AIRFLOW__ADMIN__EMAIL:-admin@apache.aiflow.com}
      AIRFLOW__ADMIN__FIRSTNAME: ${AIRFLOW__ADMIN__FIRSTNAME:-Admin}
      AIRFLOW__ADMIN__LASTNAME: ${AIRFLOW__ADMIN__LASTNAME:-User}
    command: >
      bash -c "
        airflow db migrate &&
        airflow connections create-default-connections &&
        airflow users create --username $${AIRFLOW__ADMIN__USER} --firstname $${AIRFLOW__ADMIN__FIRSTNAME} --lastname $${AIRFLOW__ADMIN__LASTNAME} --role Admin --email $${AIRFLOW__ADMIN__EMAIL} --password $${AIRFLOW__ADMIN__PASSWORD} || true
      "
      
  airflow:
    build: ./docker
    depends_on:
      postgres:
        condition: service_healthy
      airflow-init:
        condition: service_completed_successfully
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      AIRFLOW__CORE__FERNET_KEY: gst3hSzP5LP5enFSG/dZtHVWaRn+OI3SNuo9O17AaYE=
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
      AIRFLOW__CORE__PLUGINS_FOLDER: /opt/airflow/plugins
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    ports:
      - "8080:8080"
    command: webserver
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 10s
      timeout: 10s
      retries: 5

  airflow-scheduler:
    build: ./docker
    depends_on:
      postgres:
        condition: service_healthy
      airflow-init:
        condition: service_completed_successfully
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      AIRFLOW__CORE__FERNET_KEY: gst3hSzP5LP5enFSG/dZtHVWaRn+OI3SNuo9O17AaYE=
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    command: scheduler

volumes:
  postgres_data:
    driver: local 